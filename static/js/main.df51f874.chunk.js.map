{"version":3,"sources":["redux/actions.ts","redux/reducer.ts","redux/store.ts","components/Search.tsx","common/emuns.js","components/CandidatesTable.tsx","components/Stats.tsx","common/hooks.ts","components/Main.tsx","App.tsx","index.tsx"],"names":["CHANGE_STATUS","reducer","state","action","type","candidates","map","c","id","status","store","createStore","data","window","__REDUX_DEVTOOLS_EXTENSION__","useStyles","makeStyles","root","display","alignItems","margin","padding","input","flex","marginLeft","iconButton","Search","value","onChange","onReset","classes","Paper","className","InputBase","placeholder","e","target","IconButton","onClick","CancelOutlined","statuses","columns","fullName","role","connectedOn","CandidatesTable","onStatusChange","Table","TableHead","TableRow","Object","entries","key","label","TableCell","TableBody","candidate","keys","Select","MenuItem","theme","justifyContent","marginTop","spacing","cell","paddingLeft","paddingRight","Stats","Typography","useStats","getStats","useCallback","reduce","obj","filter","r","length","useState","stats","setStats","useEffect","paddingTop","paddingBottom","Main","dispatch","useDispatch","useSelector","query","setQuery","tableData","filteredData","updateFilteredData","pattern","trim","replace","regex","RegExp","nextFilteredData","test","values","join","useSearch","Container","maxWidth","variant","component","changeStatus","createMuiTheme","palette","App","MuiThemeProvider","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df51f874.chunk.js","sourcesContent":["export const CHANGE_STATUS = 'CHANGE_STATUS';\n\nexport function changeStatus(id: number, status: string) {\n  return {\n    type: CHANGE_STATUS,\n    id,\n    status,\n  };\n}\n","import { CHANGE_STATUS } from './actions';\n\nfunction reducer(state: State, action: Action): State {\n  switch (action.type) {\n    case CHANGE_STATUS:\n      return {\n        ...state,\n        candidates: state.candidates.map(c =>\n          c.id === action.id ? { ...c, status: action.status } : c,\n        ),\n      };\n  }\n\n  return state;\n}\n\nexport default reducer;\n","import { createStore } from 'redux';\nimport reducer from './reducer';\nimport data from './data.json';\n\nconst store = createStore(\n  // @ts-ignore\n  reducer,\n  data,\n  // @ts-ignore\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nexport default store;\n","import React, { ChangeEvent } from 'react';\nimport { Paper, InputBase, IconButton } from '@material-ui/core';\nimport { CancelOutlined } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\n\ntype Props = {\n  /**\n   * Value of the input\n   */\n  value: string;\n\n  /**\n   * onChange callback\n   */\n  onChange: (value: string) => void;\n\n  /**\n   * onReset callback\n   */\n  onReset: () => void;\n};\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    margin: '24px 0',\n    padding: '2px 4px',\n  },\n  input: {\n    flex: '1 0 auto',\n    marginLeft: 12,\n  },\n  iconButton: {\n    padding: 10,\n  },\n});\n\nfunction Search({ value, onChange, onReset }: Props) {\n  const classes = useStyles();\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => onChange(e.target.value);\n\n  return (\n    <div>\n      <Paper className={classes.root}>\n        <InputBase\n          className={classes.input}\n          placeholder=\"Search here...\"\n          value={value}\n          onChange={handleChange}\n        />\n\n        <IconButton className={classes.iconButton} onClick={onReset}>\n          <CancelOutlined />\n        </IconButton>\n      </Paper>\n    </div>\n  );\n}\n\nexport default Search;\n","export const statuses = ['Screen', 'Scheduled', 'Explored', 'Hire'];\n","import React, { ChangeEvent } from 'react';\nimport {\n  Paper,\n  Table,\n  TableRow,\n  TableBody,\n  TableHead,\n  TableCell,\n  Select,\n  MenuItem,\n} from '@material-ui/core';\nimport { statuses } from '../common/emuns';\n\ntype Props = {\n  data: Candidate[];\n  onStatusChange: (id: number, status: string) => void;\n};\n\ntype Columns = keyof typeof columns;\n\nconst columns = {\n  fullName: 'Full Name',\n  role: 'Role',\n  connectedOn: 'Connected On',\n  status: 'Status',\n};\n\nfunction CandidatesTable({ data, onStatusChange }: Props) {\n  return (\n    <Paper>\n      <Table>\n        <TableHead>\n          <TableRow>\n            {Object.entries(columns).map(([key, label]) => (\n              <TableCell key={key}>{label}</TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map(candidate => (\n            <TableRow key={candidate.id}>\n              {(Object.keys(columns) as Columns[]).map(key => (\n                <TableCell key={key}>\n                  {key === 'status' ? (\n                    <Select\n                      value={candidate[key]}\n                      onChange={(e: ChangeEvent<{ value: unknown }>) =>\n                        onStatusChange(candidate.id, e.target.value as string)\n                      }\n                    >\n                      {statuses.map(status => (\n                        <MenuItem key={status} value={status}>\n                          {status}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  ) : (\n                    candidate[key]\n                  )}\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nexport default CandidatesTable;\n","import React from 'react';\nimport { Paper, Typography, makeStyles } from '@material-ui/core';\n\ntype Props = {\n  data: { [key: string]: number };\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginTop: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n  cell: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n  },\n}));\n\nfunction Stats({ data }: Props) {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root}>\n      {Object.entries(data).map(([status, value]) => (\n        <Typography key={status} className={classes.cell}>\n          {status}: {value}\n        </Typography>\n      ))}\n    </Paper>\n  );\n}\n\nexport default Stats;\n","import { useState, useEffect, useCallback } from 'react';\nimport { statuses } from './emuns';\n\nexport function useSearch(query: string, data: Candidate[]) {\n  const [filteredData, updateFilteredData] = useState(data);\n\n  useEffect(() => {\n    /**\n     * Create search pattern from query string:\n     * 1. Escape all regex special characters\n     * 2. Replace AND with forward lookup expression\n     * 3. Replace OR with alternation expression\n     * 4. Add missing characters to the start/end of expression to finish it\n     *\n     * Example (query -> pattern):\n     * \"one AND two OR two AND three\" -> /((?=.*one)(?=.*two))|((?=.*two)(?=.*three))/\n     */\n    const pattern = query\n      .trim()\n      .replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n      .replace(/\\sAND\\s/g, ')(?=.*')\n      .replace(/\\sOR\\s/g, '))|((?=.*')\n      .replace(/^.+$/, '((?=.*$&))');\n\n    const regex = new RegExp(pattern, 'gi');\n\n    /**\n     * For each row, concatenate all columns and test resulting string against our regex\n     */\n    const nextFilteredData = data.filter(c => regex.test(Object.values(c).join(' ')));\n\n    /**\n     * Update state with filtered data\n     */\n    updateFilteredData(nextFilteredData);\n  }, [data, query]);\n\n  return filteredData;\n}\n\nexport function useStats(data: Candidate[]) {\n  /**\n   * Statistic data\n   */\n  const getStats = useCallback(\n    () =>\n      statuses.reduce(\n        (obj, status) => ({\n          ...obj,\n          [status]: data.filter(r => r.status === status).length,\n        }),\n        {} as { [key: string]: number },\n      ),\n    [data],\n  );\n\n  const [stats, setStats] = useState(getStats());\n\n  useEffect(() => setStats(getStats()), [data, getStats]);\n\n  return stats;\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container, Typography, makeStyles } from '@material-ui/core';\nimport Search from './Search';\nimport CandidatesTable from './CandidatesTable';\nimport Stats from './Stats';\nimport { useSearch, useStats } from '../common/hooks';\nimport { changeStatus } from '../redux/actions';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nfunction Main() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  /**\n   * Candidates array from redux\n   */\n  const candidates = useSelector((state: State) => state.candidates);\n\n  /**\n   * Current search query\n   */\n  const [query, setQuery] = useState('');\n\n  /**\n   * Filtered data to display in table\n   */\n  const tableData = useSearch(query, candidates);\n\n  /**\n   * Statistic data\n   */\n  const stats = useStats(tableData);\n\n  /**\n   * Handlers\n   */\n  const handleReset = () => setQuery('');\n  const handleStatusChange = (id: number, status: string) => dispatch(changeStatus(id, status));\n\n  return (\n    <Container maxWidth=\"md\" className={classes.root}>\n      <Typography variant=\"h4\" component=\"h1\">\n        Candidates\n      </Typography>\n      <Search value={query} onChange={setQuery} onReset={handleReset} />\n      <CandidatesTable data={tableData} onStatusChange={handleStatusChange} />\n      <Stats data={stats} />\n    </Container>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, CssBaseline } from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core';\nimport store from './redux/store';\nimport Main from './components/Main';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Provider store={store}>\n        <CssBaseline />\n        <Main />\n      </Provider>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// @ts-ignore\nif (module.hot) {\n  // @ts-ignore\n  module.hot.accept('./App', () => {\n    ReactDOM.render(<App />, document.getElementById('root'));\n  });\n}\n"],"sourceRoot":""}